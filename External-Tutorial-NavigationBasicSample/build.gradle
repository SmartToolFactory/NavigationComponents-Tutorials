/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.example.android.navigationsample"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Robolectric
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/uiTest/java"
        }
        test {
            java.srcDirs += "src/uiTest/java"
        }
    }
    namespace 'com.example.android.navigationsample'
}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation deps.kotlin.stdlib
//    implementation deps.support.app_compat
//    implementation deps.support.design
//    implementation deps.constraint_layout
//    implementation deps.support.core_ktx
//
//    implementation deps.lifecycle.extensions
//    implementation deps.lifecycle.viewmodel_ktx
//
//    implementation deps.navigation.fragment_ktx
//    implementation deps.navigation.runtime_ktx
//    implementation deps.support.fragment_runtime_ktx


    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-runtime-ktx:$rootProject.navigationVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentKtxVersion"


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    // Material
    implementation 'com.google.android.material:material:1.0.0'
    // ViewPager 2
    implementation 'androidx.viewpager2:viewpager2:1.0.0-beta02'
    // ConstraintLayout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:' + rootProject.retrofitVersion
    implementation 'com.squareup.retrofit2:converter-gson:' + rootProject.retrofitVersion
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // Gson
    implementation 'com.google.code.gson:gson:' + rootProject.gsonVersion

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:' + rootProject.archLifecycleVersion

    // Room
    implementation 'androidx.room:room-runtime:' + rootProject.roomVersion
    // For Kotlin use kapt instead of annotationProcessor
    kapt 'androidx.room:room-compiler:' + rootProject.roomVersion
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation 'androidx.room:room-ktx:' + rootProject.roomVersion
    // optional - RxJava support for Room
    implementation 'androidx.room:room-rxjava2:' + rootProject.roomVersion

    // Dagger Core dependencies
    implementation 'com.google.dagger:dagger:' + rootProject.daggerVersion
    kapt 'com.google.dagger:dagger-compiler:' + rootProject.daggerVersion
    kapt 'com.google.dagger:dagger-android-processor:' + rootProject.daggerVersion
    // Dagger Android dependencies
    implementation 'com.google.dagger:dagger-android-support:' + rootProject.daggerVersion

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:' + rootProject.rxjavaVersion
    // RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:' + rootProject.rxandroidVersion

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'


    // "androidx.fragment:fragment-testing" must be scoped to all sourcesets.
//    implementation deps.support.fragment_testing

//    // Espresso and UI Testing
//    androidTestImplementation deps.atsl.ext_junit
//    androidTestImplementation deps.mockito.android
//    androidTestImplementation deps.espresso.core
//    androidTestImplementation deps.espresso.contrib
//    androidTestImplementation deps.espresso.intents
//
//    // Host-side tests
//    testImplementation deps.atsl.ext_junit
//    testImplementation deps.robolectric
//    testImplementation deps.mockito.core
//    // Espresso API running in Robolectric
//    testImplementation deps.espresso.core
//    testImplementation deps.espresso.contrib
//    testImplementation deps.espresso.intents
}
